plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    signingConfigs {
        finalsign {
            Properties properties = new Properties()
            properties.load(project.rootProject.file("apiconfig.properties").newDataInputStream())
            storeFile file('./../AppTranslatorKey.jks')
            storePassword properties.getProperty("storePassword", "")
            keyAlias properties.getProperty("keyAlias", "")
            keyPassword properties.getProperty("keyPassword", "")
        }
    }

    defaultConfig {
        applicationId "softing.ubah4ukdev.translator"
        minSdkVersion 26
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.finalsign
            versionNameSuffix " Full version"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }

    buildTypes.each {
        Properties properties = new Properties()
        properties.load(project.rootProject.file("apiconfig.properties").newDataInputStream())
        def appToken = properties.getProperty("token", "")
        it.buildConfigField "String", "API_TOKEN", appToken
        def urlBase = properties.getProperty("base_url", "")
        it.buildConfigField "String", "BASE_URL", urlBase
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "androidx.core:core-ktx:$core_ktx_version"
    implementation "androidx.appcompat:appcompat:$appcompat_version"
    implementation "com.google.android.material:material:$android_material_version"
    implementation "androidx.constraintlayout:constraintlayout:$constraint_layout_version"

    // ViewBindingPropertyDelegate
    implementation "com.github.kirich1409:viewbindingpropertydelegate:$viewbinding_delegate_version"

    // Rx-Java
    implementation "io.reactivex.rxjava2:rxandroid:$rxjava2_rxandroid_version"
    implementation "io.reactivex.rxjava2:rxjava:$rxjava2_version"
    implementation "io.reactivex.rxjava2:rxkotlin:$rxjava2_rxkotlin_version"

    // Retrofit 2
    implementation "com.squareup.retrofit2:retrofit:$retrofit2_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit2_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp3_logging_version"
    implementation "com.jakewharton.retrofit:retrofit2-rxjava2-adapter:$rxjava2_adapter_version"
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:$coroutines_adapter"

    // Koin
    implementation "io.insert-koin:koin-core:$koin_version"
    implementation "io.insert-koin:koin-android:$koin_version"
    implementation "io.insert-koin:koin-android-compat:$koin_version"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation "io.insert-koin:koin-test:$koin_version"
    testImplementation "io.insert-koin:koin-test-junit4:$koin_version"

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"

    //Cicerone
    implementation "com.github.terrakok:cicerone:$cicerone_version"

    // Tests
    testImplementation "junit:junit:$junit_version"
    androidTestImplementation "androidx.test.ext:junit:$test_ext_junit_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$test_espresso_version"
}